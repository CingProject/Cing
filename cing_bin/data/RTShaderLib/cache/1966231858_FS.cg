//-----------------------------------------------------------------------------
// Program Type: Fragment shader
// Language: cg
// Created by Ogre RT Shader Generator. All rights reserved.
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
//                         PROGRAM DEPENDENCIES
//-----------------------------------------------------------------------------
#include "FFPLib_Common.cg"
#include "SGXLib_PerPixelLighting.cg"
#include "FFPLib_Texturing.cg"
#include "SGXLib_IntegratedPSSM.cg"

//-----------------------------------------------------------------------------
//                         GLOBAL PARAMETERS
//-----------------------------------------------------------------------------

float4	derived_ambient_light_colour;
float4	surface_diffuse_colour;
float4	surface_specular_colour;
float4	surface_emissive_colour;
float4	derived_scene_colour;
float	surface_shininess;
float4	light_position_view_space0;
float4	light_attenuation1;
float4	derived_light_diffuse2;
float4	derived_light_specular3;
float4	light_position_view_space4;
float4	light_attenuation5;
float4	derived_light_diffuse6;
float4	derived_light_specular7;
float4	light_position_view_space8;
float4	light_attenuation9;
float4	derived_light_diffuse10;
float4	derived_light_specular11;
float4	light_position_view_space12;
float4	light_attenuation13;
float4	derived_light_diffuse14;
float4	derived_light_specular15;
float4	light_direction_view_space16;
float4	derived_light_diffuse17;
float4	derived_light_specular18;
float4	pssm_split_points19;
sampler2D	shadow_map0 : register(s0);
float4	inv_shadow_texture_size20;
sampler2D	shadow_map1 : register(s1);
float4	inv_shadow_texture_size21;
sampler2D	shadow_map2 : register(s2);
float4	inv_shadow_texture_size22;

//-----------------------------------------------------------------------------
// Function Name: main
// Function Desc: Pixel Program Entry point
//-----------------------------------------------------------------------------
void main
	(
	 in float3	iTexcoord3_0 : TEXCOORD0, 
	 in float3	iTexcoord3_1 : TEXCOORD1, 
	 in float	iTexcoord1_2 : TEXCOORD2, 
	 in float4	iTexcoord4_3 : TEXCOORD3, 
	 in float4	iTexcoord4_4 : TEXCOORD4, 
	 in float4	iTexcoord4_5 : TEXCOORD5, 
	 out float4	oColor_0 : COLOR
	)
{
	float4	lLocalParam_0;
	float4	lLocalParam_1;
	float4	lPerPixelDiffuse;
	float4	lPerPixelSpecular;
	float	lShadowFactor;

	FFP_Construct(1.0, 1.0, 1.0, 1.0, lLocalParam_0);

	FFP_Construct(0.0, 0.0, 0.0, 0.0, lLocalParam_1);

	FFP_Assign(lLocalParam_0, oColor_0);

	FFP_Assign(derived_scene_colour, lPerPixelDiffuse);

	FFP_Assign(lLocalParam_1, lPerPixelSpecular);

	SGX_Light_Point_DiffuseSpecular(iTexcoord3_0, iTexcoord3_1, light_position_view_space0.xyz, light_attenuation1, derived_light_diffuse2.xyz, derived_light_specular3.xyz, surface_shininess, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz);

	SGX_Light_Point_DiffuseSpecular(iTexcoord3_0, iTexcoord3_1, light_position_view_space4.xyz, light_attenuation5, derived_light_diffuse6.xyz, derived_light_specular7.xyz, surface_shininess, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz);

	SGX_Light_Point_DiffuseSpecular(iTexcoord3_0, iTexcoord3_1, light_position_view_space8.xyz, light_attenuation9, derived_light_diffuse10.xyz, derived_light_specular11.xyz, surface_shininess, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz);

	SGX_Light_Point_DiffuseSpecular(iTexcoord3_0, iTexcoord3_1, light_position_view_space12.xyz, light_attenuation13, derived_light_diffuse14.xyz, derived_light_specular15.xyz, surface_shininess, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz);

	SGX_Light_Directional_DiffuseSpecular(iTexcoord3_0, iTexcoord3_1, light_direction_view_space16.xyz, derived_light_diffuse17.xyz, derived_light_specular18.xyz, surface_shininess, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz, lPerPixelDiffuse.xyz, lPerPixelSpecular.xyz);

	FFP_Assign(lPerPixelDiffuse, lLocalParam_0);

	FFP_Assign(lLocalParam_0, oColor_0);

	FFP_Assign(lPerPixelSpecular, lLocalParam_1);

	SGX_ComputeShadowFactor_PSSM3(iTexcoord1_2, pssm_split_points19, iTexcoord4_3, iTexcoord4_4, iTexcoord4_5, shadow_map0, shadow_map1, shadow_map2, inv_shadow_texture_size20, inv_shadow_texture_size21, inv_shadow_texture_size22, lShadowFactor);

	SGX_ApplyShadowFactor_Diffuse(derived_scene_colour, lLocalParam_0, lShadowFactor, lLocalParam_0);

	SGX_ModulateScalar(lShadowFactor, lLocalParam_1, lLocalParam_1);

	FFP_Assign(lLocalParam_0, oColor_0);

	FFP_Add(oColor_0.xyz, lLocalParam_1.xyz, oColor_0.xyz);
}

