// Summary: Defines all major enumerations used in Flatland.
// Copyright: 2007  Philip Rideout.  All rights reserved.
// License: see source/bsd-license.txt

// this file has been generated by enums.pl

#pragma once

namespace Flatland
{
    static const char *ShapeTable[] =
    {
        "Quad",
        "Line",
        "Circle",
        "Terrain",
        "Composite",
    };

    struct Shape
    {
        enum EShape
        {
            Quad = 0,
            Line = 1,
            Circle = 2,
            Terrain = 3,
            Composite = 4,
            Count = 5,
            Invalid = 5,
        };

        union
        {
            EShape name;
            unsigned int value;
        };

        Shape(EShape name) : name(name) {}
        Shape(unsigned int value) : value(value) {}
        Shape() : value(Invalid) {}
        operator EShape() const { return name; }
        unsigned int operator++() { return ++value; }
        unsigned int operator++(int) { return value++; }
        unsigned int operator--() { return --value; }
        unsigned int operator--(int) { return value--; }
        const char *GetString() const { return ShapeTable[value]; }
    };
}
